on:
  push:
    # Sequence of patterns matched against refs/tags
    branches:
      - 'dev/v.0.1.0-beta-release'
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Build Status

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Build
        run: make 
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: builds/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          body: | 
            # THIS IS A BETA!
            If you encounter any issues please submit them via the Issue/PR guidelines with the provided templates. Please note BETA == BUGS, and while the software is usable, there could be untested features that break things. Don't blame us if you lose your shells, you have been warned!

            ## Features:
            - [x] Implement data response and check in status intervals
            - [x] Implement registering custom functions
            - [x] Consider creating a "color" library in core to handle custom colors across the entire application
            - [x] Port finished HTTP server to HTTPs
            - [x] Enhance custom functions
            - [x] Implement TCP listener
            - [x] Implement "wolfpack" teamserver with client binary generation
            - [x] Implement extended functions like upload/download and any other seemingly "universal" switches
            - [x] Implement a web shell handler for bind web shells
            - [x] Consider random PSK generation rather than a default base key
            - [x] Add Exec command to allow local shell interaction while in the Lupo CLI
            - [x] Reformat the ASCII art so it is printed a bit more cleanly
            - [x] Document API
            - [x] Document core features
            - [x] Create demo implants to show off all the feature/functionality